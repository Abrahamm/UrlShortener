// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrlShortener.Context;

namespace UrlShortener.Migrations
{
    [DbContext(typeof(UrlShortenerContext))]
    partial class UrlShortenerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UrlShortener.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new { Id = 1, Name = "Web Search" },
                        new { Id = 2, Name = "Web Portal" },
                        new { Id = 3, Name = "Tutorial" },
                        new { Id = 4, Name = "EF Core" },
                        new { Id = 5, Name = "DB Context" },
                        new { Id = 6, Name = "LINQ" },
                        new { Id = 7, Name = "C#" },
                        new { Id = 8, Name = "News" }
                    );
                });

            modelBuilder.Entity("UrlShortener.Entities.Tagged", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TagId");

                    b.Property<int>("UrlId");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("UrlId");

                    b.ToTable("Taggeds");

                    b.HasData(
                        new { Id = 1, TagId = 1, UrlId = 1 },
                        new { Id = 2, TagId = 2, UrlId = 2 },
                        new { Id = 3, TagId = 8, UrlId = 2 },
                        new { Id = 4, TagId = 2, UrlId = 3 },
                        new { Id = 5, TagId = 8, UrlId = 3 },
                        new { Id = 6, TagId = 3, UrlId = 4 },
                        new { Id = 7, TagId = 6, UrlId = 4 },
                        new { Id = 8, TagId = 7, UrlId = 4 },
                        new { Id = 9, TagId = 3, UrlId = 5 },
                        new { Id = 10, TagId = 4, UrlId = 5 },
                        new { Id = 11, TagId = 5, UrlId = 5 },
                        new { Id = 12, TagId = 7, UrlId = 5 }
                    );
                });

            modelBuilder.Entity("UrlShortener.Entities.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateExpires");

                    b.Property<string>("LongUrl")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("ShortUrl")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Urls");

                    b.HasData(
                        new { Id = 1, DateCreated = new DateTime(2020, 1, 12, 15, 32, 46, 0, DateTimeKind.Unspecified), DateExpires = new DateTime(2020, 2, 12, 15, 32, 46, 0, DateTimeKind.Unspecified), LongUrl = "https://www.google.com", ShortUrl = "gogle", UserId = 1 },
                        new { Id = 2, DateCreated = new DateTime(2020, 1, 24, 12, 1, 7, 0, DateTimeKind.Unspecified), DateExpires = new DateTime(2020, 2, 24, 12, 1, 7, 0, DateTimeKind.Unspecified), LongUrl = "https://www.index.hr", ShortUrl = "index", UserId = 1 },
                        new { Id = 3, DateCreated = new DateTime(2020, 1, 20, 13, 17, 21, 0, DateTimeKind.Unspecified), DateExpires = new DateTime(2020, 2, 20, 13, 17, 21, 0, DateTimeKind.Unspecified), LongUrl = "https://www.net.hr", ShortUrl = "nethr", UserId = 2 },
                        new { Id = 4, DateCreated = new DateTime(2020, 1, 17, 1, 36, 59, 0, DateTimeKind.Unspecified), DateExpires = new DateTime(2020, 2, 17, 1, 36, 59, 0, DateTimeKind.Unspecified), LongUrl = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/basic-linq-query-operations", ShortUrl = "linqq", UserId = 2 },
                        new { Id = 5, DateCreated = new DateTime(2020, 1, 31, 23, 59, 59, 0, DateTimeKind.Unspecified), DateExpires = new DateTime(2020, 2, 29, 23, 59, 59, 0, DateTimeKind.Unspecified), LongUrl = "https://www.entityframeworktutorial.net/efcore/entity-framework-core-dbcontext.aspx", ShortUrl = "dbctx", UserId = 3 }
                    );
                });

            modelBuilder.Entity("UrlShortener.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, BirthDate = new DateTime(1990, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstName = "Luka", LastName = "Nuic" },
                        new { Id = 2, BirthDate = new DateTime(1980, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstName = "Davor", LastName = "Lozic" },
                        new { Id = 3, BirthDate = new DateTime(1986, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstName = "Antun", LastName = "Tun" }
                    );
                });

            modelBuilder.Entity("UrlShortener.Entities.Tagged", b =>
                {
                    b.HasOne("UrlShortener.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UrlShortener.Entities.Url", "Url")
                        .WithMany()
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UrlShortener.Entities.Url", b =>
                {
                    b.HasOne("UrlShortener.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
